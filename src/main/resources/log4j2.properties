# log4j2 properties
status = error

# setup variable: log pattern
#property.pattern = %d{yyyy-MM-dd HH:mm:ss} %-5p (%F:%L) - %msg%n
#property.pattern = %d{yyyy-MM-dd HH:mm:ss} %-5p %c{1} - %msg%n
#property.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %level [%t] [%l] - %msg%n
#property.pattern = %-4r %-5p [%t] %c - %msg%n
#property.pattern = %d [%t] %-5p %c{2} - %msg%n
#property.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %-5p [%15.15thread] %l : %msg%n
#property.pattern = %d,%d{Z} [%t] %-5p (%F:%L) - %msg%n
property.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS,Z} %5level [%15.15thread] %l : %msg%n

# Redirect log messages to console
appender.console.type = Console
appender.console.name = consoleLogger
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = ${pattern}

# RollingFileAppender name, pattern, path and rollover policy
appender.rolling.type = RollingFile
appender.rolling.name = fileLogger
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = ${pattern}
appender.rolling.policies.type = Policies
## log
appender.rolling.fileName= logs/log4j2.log
appender.rolling.filePattern= logs/log4j2_%d{yyyy-MM-dd}-%i.log.gz
## html
#appender.rolling.fileName= logs/log4j2.html
#appender.rolling.filePattern= logs/log4j2_%d{yyyy-MM-dd}-%i.html.gz
#appender.rolling.layout.type = HTMLLayout
#appender.rolling.layout.charset = UTF-8

# RollingFileAppender rotation policy
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size = 10MB
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.delete.type = Delete
appender.rolling.strategy.delete.basePath = ${basePath}
appender.rolling.strategy.delete.maxDepth = 10
appender.rolling.strategy.delete.ifLastModified.type = IfLastModified

# Delete all files older than 30 days
appender.rolling.strategy.delete.ifLastModified.age = 30d

# Configure root logger
rootLogger.level = info
rootLogger.appenderRefs = file, console
rootLogger.appenderRef.console.ref = consoleLogger
rootLogger.appenderRef.rolling.ref = fileLogger